<?xml version="1.0" encoding="UTF-8"?>
<!--
    Copyright 2016 Huawei Technologies Co., Ltd.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
-->

<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context" xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="
  http://www.springframework.org/schema/beans
  http://www.springframework.org/schema/beans/spring-beans.xsd
  http://www.springframework.org/schema/context
  http://www.springframework.org/schema/context/spring-context.xsd
  http://www.springframework.org/schema/tx
  http://www.springframework.org/schema/tx/spring-tx-2.0.xsd
  http://www.springframework.org/schema/aop
  http://www.springframework.org/schema/aop/spring-aop.xsd">

    <bean name="dataSourceProxy" class="org.openo.sdno.mss.bucket.dao.dbinfo.DataSourceFactoryBean">
        <property name="dataSource" ref="dataSource1" />
    </bean>

    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location" value="classpath:jdbc.properties" />
    </bean> 
    
    <bean id="dataSource1" class="org.apache.tomcat.jdbc.pool.DataSource" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driver}" />
        <property name="url" value="jdbc:mysql://${jdbc.host}:${jdbc.port}/l3vpn" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
        <property name="maxActive" value="50" />
        <property name="maxIdle" value="50" />
        <property name="minIdle" value="10" />
        <property name="testOnBorrow" value="true" />
        <property name="testWhileIdle" value="true" />
        <property name="timeBetweenEvictionRunsMillis" value="3600000" />
        <property name="minEvictableIdleTimeMillis" value="600000" />
        <property name="validationQuery" value="SELECT 1" />
    </bean>

    <bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSourceProxy" />
    </bean>

    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSourceProxy" />
    </bean>
    <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate" depends-on="mapperFilesLoader">
        <constructor-arg index="0" ref="sqlSessionFactoryBean" />
        <constructor-arg index="1" value="SIMPLE" />
    </bean>

    <bean id="sqlSessionTemplateBatch" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg index="0" ref="sqlSessionFactoryBean" />
        <constructor-arg index="1" value="BATCH" />
    </bean>

    <bean id="mapperFilesLoader" class="org.openo.sdno.mss.bucket.ibatis.MapperFilesLoader" init-method="init">
        <property name="sqlSessionFactory" ref="sqlSessionFactoryBean" />
    </bean>

    <bean id="mssBucketHandler" class="org.openo.sdno.mss.bucket.impl.BucketHandlerImpl" init-method="init">
        <property name="sqlSessionTemplate" ref="sqlSessionTemplate" />
    </bean>


    <bean id="mssResourceHandler" class="org.openo.sdno.mss.bucket.impl.ResourceHandlerImpl" init-method="init">
        <property name="sqlSessionTemplate" ref="sqlSessionTemplate" />
    </bean>

    <bean id="mssRealtionHandler" class="org.openo.sdno.mss.bucket.impl.RelationHandlerImpl" init-method="init">
        <property name="sqlSessionTemplate" ref="sqlSessionTemplate" />
    </bean>

    <bean id="mssMetaHandler" class="org.openo.sdno.mss.bucket.impl.MetaHandlerImpl">
        <property name="resourceHandler" ref="mssResourceHandler" />
        <property name="relationHandler" ref="mssRealtionHandler" />
    </bean>
</beans>

